syntax = "proto3";

package auth_v1;

import "google/protobuf/empty.proto";
import "auth_user_roles.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/waryataw/auth/pkg/authv1";

service AuthService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http) = {
      post: "/user/v1"
      body: "*"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse){
    option (google.api.http) = {
      get: "/user/v1/{id}"
      additional_bindings {
        get: "/user/v1/by-name/{name}"
      }
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/user/v1/{id}"
      body: "*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/user/v1/{id}"
    };
  }
}

message CreateUserRequest {
  string name = 1 [(validate.rules).string = {min_len: 5, max_len: 50}];
  string email = 2 [(validate.rules).string.email = true];
  string password = 3 [(validate.rules).string = {
    min_len: 8,
    max_len: 64,
    pattern: "^(.*[a-z].*)(.*[A-Z].*)(.*\\d.*)$"
  }];
  string password_confirm = 4[(validate.rules).string = {
    min_len: 8,
    max_len: 64,
    pattern: "^(.*[a-z].*)(.*[A-Z].*)(.*\\d.*)$"
  }];
  Role role = 5 [(validate.rules).enum = {in: [1, 2]}];
}

message CreateUserResponse {
  int64 id = 1;
}

message GetUserRequest {
  oneof query {
    int64 id = 1[(validate.rules).int64.gte = 0];
    string name = 2[(validate.rules).string = {min_len: 5, max_len: 50}];
  }
}
message GetUserResponse {
  int64 id = 1;
  string name = 2;
  string email = 3;
  Role role = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message UpdateUserRequest {
  int64 id = 1[(validate.rules).int64.gte = 0];
  string name = 2 [(validate.rules).string = {min_len: 5, max_len: 50}];
  string email = 3 [(validate.rules).string.email = true];
  Role role = 4 [(validate.rules).enum = {in: [1, 2]}];
}

message DeleteUserRequest {
  int64 id = 1[(validate.rules).int64.gte = 0];
}